---
import { getCollection, type CollectionEntry } from "astro:content";
import PostLayout from "../../layouts/PostLayout.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection("posts");
  return blogEntries.map((entry: CollectionEntry<"posts">) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props as { entry: CollectionEntry<"posts"> };
const { Content, headings } = await entry.render();
const { tags } = entry.data;
const validHeadings = headings.filter((heading) => heading.depth === 2);
---

<PostLayout frontmatter={entry.data}>
  <div class="flex sm:flex-row flex-col gap-8">
    {
      validHeadings.length > 0 && (
        <div class="side w-full sm:w-64 shrink-0 border-r">
          <div class="sticky top-20">
            <h3 class="text-lg font-semibold mb-4">Table Of Contents</h3>
            <ul class="space-y-2">
              {validHeadings.map((heading) => (
                <li>
                  <a
                    href={`#${heading.slug}`}
                    class="text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white no-underline"
                  >
                    {heading.text}
                  </a>
                </li>
              ))}
            </ul>
            <h4 class="mt-6 font-semibold">Tags</h4>

            <div class="mt-2 flex flex-wrap gap-3">
              {tags.map((tag) => (
                <a
                  href={`/pedalboards/${tag}`}
                  class="no-underline capitalize px-3 py-2 text-sm rounded-md bg-neutral-200
                  hover:bg-yellow-400 dark:bg-yellow-400 dark:hover:bg-yellow-500 
                  dark:text-neutral-900 font-semibold transition-colors inline-block"
                >
                  {tag}
                </a>
              ))}
            </div>
          </div>
        </div>
      )
    }
    <div class="flex-1">
      <Content />
    </div>
  </div>
</PostLayout>
