---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import BlogPost from "@/components/BlogPost.astro";
import Tags from "@/components/Tags.astro";
import { fade } from "astro:transitions";
import { Image } from "astro:assets";

interface Props {
  page: {
    data: any[];
    currentPage: number;
    lastPage: number;
    url: {
      prev: string | undefined;
      next: string | undefined;
    };
  };
  allTags: string[];
}

export async function getStaticPaths({ paginate }) {
  const allPosts = await getCollection("posts");
  const allTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];
  const sortedPosts = allPosts.sort(
    (a, b) =>
      new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf(),
  );

  return paginate(sortedPosts, {
    pageSize: 6,
    props: { allTags }, // Pass allTags here
  });
}

// Get everything from props
const { page, allTags } = Astro.props as Props;
const pageTitle = "Pedalboards";
const tag = "";

const guitar =
  "https://images.unsplash.com/photo-1624636224909-d986525fb391?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D";
---

<Layout pageTitle={pageTitle}>
  <Image
    class="w-full h-96 object-cover"
    height={30}
    width={30}
    alt="guitar"
    src={guitar}
  />
  <div class="max-w-7xl mx-auto pt-2 min-h-screen">
    <aside class="px-4 py-6">
      <h2
        class="text-xl font-semibold text-neutral-800 dark:text-white mb-6 capitalize"
      >
        View All Tags
      </h2>
      <Tags tags={allTags} currentTag={tag} basePath="/pedalboards" />
    </aside>

    <!-- Main Content -->
    <main
      class="flex-1 px-4 py-6"
      transition:animate={fade({ duration: "0.7s" })}
    >
      <ul class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {
          page.data.map((post) => (
            <li class="flex justify-center">
              <BlogPost
                url={`/posts/${post.slug}/`}
                title={post.data.title}
                image={post.data.image.url}
                alt={post.data.image.alt}
                description={post.data.description}
                date={post.data.pubDate}
                tags={post.data.tags}
              />
            </li>
          ))
        }
      </ul>

      <!-- Pagination Navigation -->
      <nav class="flex justify-between items-center mt-8">
        {
          page.url.prev ? (
            <a
              href={page.url.prev}
              class=" text-neutral-900 px-4 py-2 bg-yellow-400  rounded hover:bg-yellow-500 "
            >
              Previous
            </a>
          ) : null
        }
        <span>Page {page.currentPage} of {page.lastPage}</span>
        {
          page.url.next ? (
            <a
              href={page.url.next}
              class="text-neutral-900 px-4 py-2 bg-yellow-400  rounded hover:bg-yellow-500 "
            >
              Next
            </a>
          ) : null
        }
      </nav>
    </main>
  </div>
</Layout>
